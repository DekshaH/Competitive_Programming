//https://leetcode.com/problems/valid-parentheses/

class Solution {
public:
    bool isValid(string s) {
        
        int i;
            stack<char> q;

            if(s.size() && (s.size()%2 ==0))
            { 
               for(i=0;i<s.size(); ++i)
               {
                   switch(s[i])
                   {
                       case '(':
                       case '[':
                       case '{':
                        q.push(s[i]);
                        break;
                       case ')':
                        if((!q.empty()) && q.top() == '(') 
                        {
                            q.pop();
                        }
                        else
                        {
                            return false;
                        }
                        break;
                       case ']':
                        if((!q.empty()) && q.top() == '[') 
                        {
                            q.pop();
                        }
                        else
                        {
                            return false;
                        }
                        break;
                       case '}':
                        if((!q.empty()) && q.top() == '{') 
                        {
                            q.pop();
                        }
                        else
                        {
                            return false;
                        }
                        break;
                        default:
                        return false;
                   }
               }
               return q.empty();
            }
            return false;
     
        }
};
